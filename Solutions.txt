questions: 
{
    beginnerSeries2Clock: {
        kyu: 8,
        prompt: "Your task is to write a function which returns the time since midnight in milliseconds.",
        solution: "function past(h, m, s){ 
            return ((h*60+m)*60+s)*1000}"
    },

    basicMathematicalOperations:{
        kyu: 8,
        prompt: "Your task is to create a function that does four basic mathematical operations.The function should take three arguments - operation(string/char), value1(number), value2(number). The function should return result of numbers after applying the chosen operation.",
        solution: "function basicOp(operation, value1, value2){
            if(operation=='+'){
                return (value1 + value2)
                }
            if(operation=='-'){
                return (value1 - value2)
                }
            if(operation=='*'){
                return (value1 * value2)
                }
            if(operation=='/'){
                return (value1 / value2)
                }
            }"
            
    },

    grasshopperPersonalizedMessage:{
        kyu:8,
        prompt: "Create a function that gives a personalized greeting. This function takes two parameters: name and owner.",
        solution: "function greet (name, owner) {
            if(name===owner){
                return 'Hello boss'
            }
            else return 'Hello guest'
            }"
    },

    removeExclamationMarks:{
        kyu: 8,
        prompt: "Write function RemoveExclamationMarks which removes all exclamation marks from a given string.",
        solution: "function removeExclamationMarks(s) {
            return s.split("").filter((l) => l != "!").join("");
            }"
    },

    simpleMultiplication:{
        kyu:8,
        prompt:"This kata is about multiplying a given number by eight if it is an even number and by nine otherwise."
        solution:"function simpleMultiplication(number) {
                return (number%2==1)?number*9:number*8
            }"
    },

    whoLikesThis:{
        kyu:6,
        prompt: "You probably know the "like" system from Facebook and other pages. People can "like" blog posts, pictures or other items. We want to create the text that should be displayed next to such an item. Implement the function which takes an array containing the names of people that like an item. It must return the display text as shown in the examples:"
        solution: "function likes(names) {
            const l = names.length
            if (l == 1){
                return `${names[0]} likes this`
            }
            if (l == 2) {
                return `${names[0]} and ${names[1]} like this`
            }
            if (l == 3) {
                return `${names[0]}, ${names[1]} and ${names[2]} like this`
            }
            if (l >= 4) {
                return `${names[0]}, ${names[1]} and ${l-2} others like this`
            }
            return 'no one likes this'
            }"
    },

    madeDeadfishSwim: {
        kyu: 6,
        prompt: "Write a simple parser that will parse and run Deadfish.
            Deadfish has 4 commands, each 1 character long: 
            i increments the value (initially 0)
            d decrements the value
            s squares the value
            o outputs the value into the return array
            Invalid characters should be ignored.",
        solution: "function parse( data ){
            const output = []
            const commands = data.split("")
            let num = 0
            while (commands.length != 0) {
                switch (commands[0]) {
                    case "i":
                    num += 1
                    commands.shift()
                    break;
                    case "d":
                    num -= 1
                    commands.shift()
                    break;
                    case "s":
                    num = num*num
                    commands.shift()
                    break;
                    case "o":
                    output.push(num)
                    commands.shift()
                    break;
                    default:
                    commands.shift()
                }
            }
            return output
            }"
    },

    uniqueInOrder:{
        kyu: 6,
        prompt: "Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements."
        solution : "var uniqueInOrder=function(iterable){
            
            let iterate = iterable
            let solution = []
            
            if ((typeof iterate) === (typeof "string")) {
                iterate = iterate.split('')
            }
            
            let current = iterate[0]
            
            while (iterate.length != 0 ) {
                while (iterate[0] == current){
                    iterate.shift()
                } 
                solution.push(current)
                current = iterate[0]
            }
                return solution
            }"
    },

    detectPangram: {
        kyu: 6,
        prompt: "A pangram is a sentence which uses every letter of the alphabet. Given a string, detect whether or not it is a pangram. Return True if it is, False if not. Ignore numbers and punctuation.",
        solution: "function isPangram(string){
            let alpha = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
            let pan = alpha.map((letter) => string.includes(letter) )
            return !pan.includes(false)
            }"
    },

    buildAPileOfCubes: {
        kyu: 6,
        prompt: "Your task is to construct a building which will be a pile of n cubes. The cube at the bottom will have a volume of n^3, the cubes will have a volume of (n-1)^3 and so on until the top which will have a volume of 1^3. You are given a total volume 'm' of the building. Being given 'm' you can find the number 'n' of cubes you will need to build said building."

        solution: "function findNb(m) {
            let n = m
            let counter = 0
            
            for (counter; n > 0; counter++) {
                n -= (counter*counter*counter)
            }
            
            return (n==0)?(counter-1):(-1)
            }"
    },

    sumOfParts: {
        kyu: 6,
        prompt: "Add every element in an array of numbers together, save that number in an array, then remove the first element of the original array. Repeat until there are no elements left in the original array.",
        solution: "function partsSums(ls) {
                let sums = []
                let list = ls
                while (list.length > 0) {
                sums.push(list.reduce((partialSum, a) => partialSum + a, 0))
                list.shift()
                }
            sums.push(0)
            return sums
            }"
    },

    createPhoneNumber: {
        kyu: 6,
        prompt: "You will recieve and array of 10 numbers, format them to be a phone number, like (123) 456-789.",
        solution: "function createPhoneNumber(numbers){
  
            let area = [] //wouldnt let me use = numbers [0, 1, 2]
            area.push(numbers[0])
            area.push(numbers[1])
            area.push(numbers[2])
            let part2 = []
            part2.push(numbers[3])
            part2.push(numbers[4])
            part2.push(numbers[5])
            let part3 = []
            part3.push(numbers[6])
            part3.push(numbers[7])
            part3.push(numbers[8])
            part3.push(numbers[9])
            
            let phoneNumber = `(${area.join("")}) ${part2.join("")}-${part3.join("")}`

            
            return phoneNumber
            }"
    },

    sumOfTwoLowestPossibleIntegers: {
        kyu: 7,
        prompt: "Create a function that returns the sum of the two lowest positive numbers given an array of minimum 4 positive integers. No floats or non-positive integers will be passed.",
        solution: "function sumTwoSmallestNumbers(numbers) {  
            let n = numbers.sort(function(a, b) {return a - b})
            return n[0] + n[1]
            }"
    },

    arrayDiff: {
        kyu: 6,
        prompt: "Your goal in this kata is to implement a difference function, which subtracts one list from another and returns the result. It should remove all values from list 'a' that are present in list 'b' whilst maintaining their order.
        solution: "function arrayDiff(a, b) {
            const filtered = a.filter((keyword) => !b.includes(keyword))
            return filtered
            }"
    },

    directionsReduction : {
        kyu: 5,
        prompt: "Remove adjacent North and South as well as East and West from an array of directions.",
        solution: "function dirReduc(arr){
  
        let prevDir = ""
        let newDirs = []
        
        arr.forEach((dir) => {
            let check = false
            if ((dir == "NORTH" & prevDir =="SOUTH") || (dir == "SOUTH" & prevDir =="NORTH") || (dir == "EAST" & prevDir =="WEST") || (dir == "WEST" & prevDir =="EAST")) {
            newDirs.pop()
            prevDir = `${newDirs[newDirs.length - 1]}`
            check = true
            }
            if (check == false) {
            newDirs.push(dir)
            prevDir = `${newDirs[newDirs.length - 1]}`
            }
        })
        
        return newDirs
        
        }"
    },

    stopSpinningMyWords: {
        kyu: 6,
        prompt: "Invert every word in a string with 5 or more letters.",
        solution: "function spinWords(string){
            let words = string.split(' ')
            
            words = words.map((word) => {
                return (word.split('').length>4)?(word.split('').reverse().join('')):word
            })  
            words = words.join(' ')
            
            return words

            }"
    }





}